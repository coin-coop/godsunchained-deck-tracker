<Window x:Class="GodsUnchained_Companion_App.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GodsUnchained_Companion_App.Windows"
        mc:Ignorable="d"
        Title="Gods Unchained Companion App" Height="840" Width="1200" FontSize="16"
        Loaded="Window_Loaded">

    <Window.Background>
        <SolidColorBrush Color="#152C40"/>
    </Window.Background>

    <Window.Resources>
        <!--A Style that affects Menu-->
        <Style TargetType="Menu">
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Menu">
                        <Border x:Name="MainMenu" Background="#0D1720">
                            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--A Style that affects all Labels-->
        <Style TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="LightSkyBlue"/>
        </Style>

        <!--A Style that extends the previous Label Style with an x:Key of UserInfoLabel-->
        <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label"
           x:Key="UserInfoLabel">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!--A Style that extends the previous Label Style with an x:Key of HeaderLabel-->
        <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label"
           x:Key="HeaderLabel">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!--A Style that extends the previous Label Style with an x:Key of UserInfoDataLabel-->
        <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="Label"
           x:Key="UserInfoDataLabel">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
        </Style>

        <!--A Style that affects all TextBlocks-->
        <Style TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Montserrat"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="AliceBlue"/>
        </Style>

        <!--A Style that extends the previous TextBlock Style with an x:Key of UserNameText-->
        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock"
           x:Key="UserNameText">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="#80D1D1" />
                            <GradientStop Offset="1.0" Color="LightSkyBlue" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!--A Style that affects all ListBoxItems-->
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="5" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="11*" />
            <ColumnDefinition Width="9*" />
            <ColumnDefinition Width="11*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="3" Height="26" Name="menu1" VerticalAlignment="Top">
            <MenuItem Header="_New">
                <MenuItem Header="_God" IsCheckable="false" />
                <MenuItem Header="_God" IsCheckable="false" />
                <MenuItem Header="_God" IsCheckable="false" />
            </MenuItem>
            <MenuItem Header="_Deck">
                <MenuItem Header="_Edit" IsCheckable="false" />
                <MenuItem Header="_Rename" IsCheckable="false" />
                <MenuItem Header="_Archive" IsCheckable="false" />
                <MenuItem Header="_Delete" IsCheckable="false" />
                <MenuItem Header="_Import">
                    <MenuItem Header="_From deck code" IsCheckable="false" Click="ImportDeckItemMenu_Click" Background="{StaticResource ButtonBackgroundGradient}"/>
                </MenuItem>
                <MenuItem Header="_Export">
                    <MenuItem Header="_To clipboard" IsCheckable="false" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Cards">
                <MenuItem Header="_Load" IsCheckable="false" Click="LoadCardsItemMenu_Click" Background="{StaticResource ButtonBackgroundGradient}"/>
                <MenuItem Header="_View" IsCheckable="false" Click="ViewCardsItemMenu_Click" Background="{StaticResource ButtonBackgroundGradient}"/>
            </MenuItem>
            <MenuItem Header="_Stats">
                <MenuItem Header="_Ranked" IsCheckable="false" />
                <MenuItem Header="_Weekend ranked" IsCheckable="false" />
            </MenuItem>
            <MenuItem Header="_Plugins">
                <MenuItem Header="_First" IsCheckable="false" />
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Header="_Account" IsCheckable="false" Click="SettingsAccountItemMenu_Click" Background="{StaticResource ButtonBackgroundGradient}"/>
                <MenuItem Header="_Log path" IsCheckable="false" Click="SettingsLogItemMenu_Click" Background="{StaticResource ButtonBackgroundGradient}"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Column="0" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="0 2" BorderBrush="#c6a052" Grid.ColumnSpan="4" Grid.RowSpan="7"/>

            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border BorderThickness="0 2" BorderBrush="#c6a052" Grid.ColumnSpan="4" Grid.RowSpan="7"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource UserNameText}" Name="txtPlayerName" Grid.ColumnSpan="4"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Name="txtLoading" Grid.ColumnSpan="4">Loading player data...</TextBlock>

                <Label Grid.Row="3" Grid.Column="0" Name="lblRank" Style="{StaticResource UserInfoLabel}">
                    Rank:
                </Label>
                <Label Grid.Row="3" Grid.Column="1" Name="lblRankData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="4" Grid.Column="0" Name="lblRating" Style="{StaticResource UserInfoLabel}">
                    Rating:
                </Label>
                <Label Grid.Row="4" Grid.Column="1" Name="lblRatingData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="5" Grid.Column="0" Name="lblLevel" Style="{StaticResource UserInfoLabel}">
                    Level:
                </Label>
                <Label Grid.Row="5" Grid.Column="1" Name="lblLevelData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="6" Grid.Column="0" Name="lblMatches" Style="{StaticResource UserInfoLabel}">
                    Matches:
                </Label>
                <Label Grid.Row="6" Grid.Column="1" Name="lblMatchesData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="3" Grid.Column="2" Name="lblMatchesWon" Style="{StaticResource UserInfoLabel}">
                    Matches Won:
                </Label>
                <Label Grid.Row="3" Grid.Column="3" Name="lblMatchesWonData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="4" Grid.Column="2" Name="lblMatchesLost" Style="{StaticResource UserInfoLabel}">
                    Matches Lost:
                </Label>
                <Label Grid.Row="4" Grid.Column="3" Name="lblMatchesLostData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="5" Grid.Column="2" Name="lblWinPoints" Style="{StaticResource UserInfoLabel}">
                    Win Points:
                </Label>
                <Label Grid.Row="5" Grid.Column="3" Name="lblWinPointsData" Style="{StaticResource UserInfoDataLabel}"/>

                <Label Grid.Row="6" Grid.Column="2" Name="lblLossPoints" Style="{StaticResource UserInfoLabel}">
                    Loss Points:
                </Label>
                <Label Grid.Row="6" Grid.Column="3" Name="lblLossPointsData" Style="{StaticResource UserInfoDataLabel}" />

            </Grid>

            <Grid Grid.Row="1" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Name="lblDecks" Style="{StaticResource HeaderLabel}">
                    Decks
                </Label>

                <ScrollViewer Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Hidden">
                    <StackPanel Name="spDecks"/>
                </ScrollViewer>
            </Grid>
        </Grid>

        <Grid Grid.Column="1"  Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="2" BorderBrush="#c6a052" Grid.ColumnSpan="1" Grid.RowSpan="3"/>

            <Label Grid.Row="0" Grid.Column="0" Name="lblDeckTitle" Style="{StaticResource HeaderLabel}">
                Choose a deck from the list
            </Label>

            <ListBox Grid.Row="1" Grid.Column="0" Name="lbCards" Margin="10" Grid.IsSharedSizeScope="True" Background="#0f1b27" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListBox.Resources>
                    <Style TargetType="Border">
                        <Setter Property="BorderBrush" Value="#c6a052"/>
                        <Setter Property="BorderThickness" Value="15"/>
                        <Setter Property="CornerRadius" Value="15"/>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.Resources>
                                <!--<ImageBrush x:Key="mana" ImageSource="pack://application:,,,/Resources/Images/Decks/mana-20.png" Stretch="None" AlignmentY="Top" AlignmentX="Center"></ImageBrush>-->
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Column2"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"/>
                            </Grid.ColumnDefinitions>
                            <!-- Assumes MVVM and you wish to bind to properties and commands -->
                            <!--<TextBlock Grid.Column="0" Text="{Binding Mana}" Foreground="AliceBlue" Background="{StaticResource mana}" FontSize="13" FontWeight="Bold"/>-->
                            <TextBlock Grid.Column="0" Text="{Binding Mana}" Foreground="{Binding TextColor}" Background="CornflowerBlue" FontWeight="Bold"/>
                            <TextBlock Grid.Column="1" Text="{Binding NameMain}" Foreground="{Binding TextColor}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Amount}" Foreground="{Binding TextColor}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Row="2" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button Grid.Row="0" Grid.Column="1" Name="btnStartTracker" Margin="10" Content="Start Tracker" Click="StartTrackerButton_Click" IsEnabled="False" Foreground="LightSkyBlue" Background="{StaticResource ButtonBackgroundGradient}"/>

                <Button Grid.Row="0" Grid.Column="3" Name="btnStopTracker" Margin="10" Content="Stop Tracker" Click="StopTrackerButton_Click" IsEnabled="False" Foreground="LightSkyBlue" Background="{StaticResource ButtonBackgroundGradient}"/>
            </Grid>
        </Grid>

        <Grid Grid.Column="2" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border BorderThickness="0 2" BorderBrush="#c6a052" Grid.ColumnSpan="1" Grid.RowSpan="3"/>

            <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource HeaderLabel}">
                Weekend Ranked Event
            </Label>
            <Label Grid.Row="1" Grid.Column="0" Name="lblTest">
                
             </Label>
            <TextBlock Grid.Row="2" Grid.Column="0" Name="lblException" TextWrapping="Wrap">
                
            </TextBlock>
        </Grid>
    </Grid>
</Window>
